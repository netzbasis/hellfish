#!/bin/sh

. ./hf.conf

### helper functions ###
DOTS_RUNNING_PID=0

helper_start_dots() {
	helper_stop_dots
	/bin/sh <<EOF &
while [ 1 -eq 1 ]
do
sleep 5
echo -n "."
done
EOF
	
	DOTS_RUNNING_PID=$!
}

helper_stop_dots() {
	if [ $DOTS_RUNNING_PID -gt 0 ]
	then
		kill $DOTS_RUNNING_PID
		printf "\n"
	fi

	DOTS_RUNNING_PID=0
}

### hellfish functions ###
hf_main() {
	case "$1" in
		cvsync|cs) hf_cvsync "$2";;
		pull) hf_pull;;
		push) hf_push;;
		kernel|ke) hf_make_kernel "$2" "$3";;
		userland|us) hf_make_build;;
		xenocara|xe) hf_make_xenocara;;
		*) hf_usage;;
	esac
}

hf_usage() {
	echo "usage: $0 <command> [option]"
	echo "available commands (aliases)"
	echo "cvsync (cs): sync cvs and git"
	printf "\t[-p] push git repos after sync\n"
	echo "pull: pull all git repos"
	echo "push: push all git repos"
	echo "kernel (ke): build kernel"
	printf "\t[-i] install\n\t[-r] reboot\n"
	echo "userland (us): build userland"
	echo "xenocara (xe): build xenocara"
}

hf_make_xenocara() {
	cd ${BSDXENOCARADIR}
	  if [ $? -gt 0 ]; hf_error 1; fi
	rm -rf ${BSDXOBJDIR}/*
	  if [ $? -gt 0 ]; hf_error 2; fi
	make clean
	  if [ $? -gt 0 ]; hf_error 3; fi
	make obj
	  if [ $? -gt 0 ]; hf_error 4; fi
	make bootstrap
	  if [ $? -gt 0 ]; hf_error 5; fi
	make build 2>> ${LOG_FILE}
	  if [ $? -gt 0 ]; hf_error 8; fi
}

hf_make_build() {
	cd ${BSDSRCDIR}
	  if [ $? -gt 0 ]; hf_error 1; fi
	rm -rf ${BSDOBJDIR}/*
	  if [ $? -gt 0 ]; hf_error 2; fi
	make clean
	  if [ $? -gt 0 ]; hf_error 3; fi
	make obj
	  if [ $? -gt 0 ]; hf_error 4; fi
	cd ${BSDSRCDIR}/etc
	  if [ $? -gt 0 ]; hf_error 5; fi
	env DESTDIR=/ make distrib-dirs
	  if [ $? -gt 0 ]; hf_error 6; fi
	cd ${BSDSRCDIR}
	  if [ $? -gt 0 ]; hf_error 7; fi
	make build 2>> ${LOG_FILE}
	  if [ $? -gt 0 ]; hf_error 8; fi
}

hf_make_kernel() {
	cd ${BSDSRCDIR}/sys/arch/${ARCH}/conf
	  if [ $? -gt 0 ]; hf_error 1; fi
	config $KERNEL
	  if [ $? -gt 0 ]; hf_error 2; fi
	cd ${BSDSRCDIR}/sys/arch/${ARCH}/compile/$KERNEL
	  if [ $? -gt 0 ]; hf_error 3; fi
	make clean
	  if [ $? -gt 0 ]; hf_error 4; fi
	make 
	  if [ $? -gt 0 ]; hf_error 5; fi

	if [ "x$1" = "x-i" ]
	then
		make install
		  if [ $? -gt 0 ]; hf_error 6; fi
	fi
	
	if [ "x$2" = "x-r" ]
	then
		reboot
		  if [ $? -gt 0 ]; hf_error 7; fi
	fi
}

hf_push() {
	echo "[1/4] $SRCNAME"
	hf__push "$SRCNAME"
	echo "[2/4] $PORTSNAME"
	hf__push "$PORTSNAME"
	echo "[3/4] $XENOCARANAME"
	hf__push "$XENOCARANAME"
	echo "[4/4] hellfish"
	hf__push "./"
}

hf_pull() {
	echo "[1/4] hellfish"
	hf__pull "./"
	echo "[2/4] $SRCNAME"
	hf__pull "$SRCNAME"
	echo "[3/4] $PORTSNAME"
	hf__pull "$PORTSNAME"
	echo "[4/4] $XENOCARANAME"
	hf__pull "$XENOCARANAME"
}

hf__push() {
	cd "$1"
	  if [ $? -gt 0 ]; hf_error 6; fi
	git push
	  if [ $? -gt 0 ]; hf_error 6; fi
	cd "$HFDIR"
	  if [ $? -gt 0 ]; hf_error 6; fi
}

hf__pull() {
	cd "$1"
	  if [ $? -gt 0 ]; hf_error 6; fi
	git checkout master
	  if [ $? -gt 0 ]; hf_error 6; fi
	git pull
	  if [ $? -gt 0 ]; hf_error 6; fi
	cd "$HFDIR"
	  if [ $? -gt 0 ]; hf_error 6; fi
}

hf__clear_git_workdir() {
	cd "$1"
	  if [ $? -gt 0 ]; hf_error 3; fi
	git checkout master >> $CVSYNC_LOG_FILE
	  if [ $? -gt 0 ]; hf_error 3; fi
	git pull 
	  if [ $? -gt 0 ]; hf_error 3; fi
	helper_start_dots
	rm -rf *
	  if [ $? -gt 0 ]; hf_error 3; fi
	helper_stop_dots
	cd "$HFDIR"
	  if [ $? -gt 0 ]; hf_error 3; fi
}

hf__cvs_co() {
	helper_start_dots
	cvs -d $CVSROOT co -P $1 >> $CVSYNC_LOG_FILE 2>&1
	  if [ $? -gt 0 ]; hf_error 5; fi
	helper_stop_dots
}

hf__add_to_git() {
	cd "$1"
	  if [ $? -gt 0 ]; hf_error 4; fi
	git add -A :/ >> $CVSYNC_LOG_FILE
	  if [ $? -gt 0 ]; hf_error 4; fi
	git commit -m "sync with openbsd-current" >> $CVSYNC_LOG_FILE 2>&1
	  if [ $? -gt 0 ]; hf_error 4; fi
	if [ "x$2" == "x-p" ]
	then
		git push
		  if [ $? -gt 0 ]; hf_error 4; fi
	fi
	cd "$HFDIR"
}

hf_cvsync() {
	echo "[1/4] cvsync repo"
	helper_start_dots
	cvsync -c "$CVSYNCCONF" >> $CVSYNC_LOG_FILE
	  if [ $? -gt 0 ]; hf_error 2; fi
	helper_stop_dots

	echo "[2/4] clear git working directories"
	hf__clear_git_workdir "$BSDSRCDIR"
	hf__clear_git_workdir "$BSDPORTSDIR"
	hf__clear_git_workdir "$BSDXENOCARADIR"

	echo "[3/4] cvs checkout"
	hf__cvs_co $SRCNAME
	hf__cvs_co $PORTSNAME
	hf__cvs_co $XENOCARANAME

	echo "[4/4] add to git"
	hf__add_to_git "$BSDSRCDIR" "$1"
	hf__add_to_git "$BSDPORTSDIR" "$1"
	hf__add_to_git "$BSDXENOCARADIR" "$1"

	rm $CVSYNC_LOG_FILE
}

hf_error() {
	helper_stop_dots
	echo "ERROR"
	exit $1
}

### main ###
if [ $# -lt 1 ]
then
	hf_usage
else
	hf_main "$@"	
fi
